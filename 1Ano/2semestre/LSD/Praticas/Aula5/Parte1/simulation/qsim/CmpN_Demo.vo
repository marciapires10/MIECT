// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "03/20/2018 13:50:12"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module CmpN (
	input0,
	input1,
	equal,
	notEqual,
	ItSigned,
	ItUnsigned);
input 	[7:0] input0;
input 	[7:0] input1;
output 	equal;
output 	notEqual;
output 	ItSigned;
output 	ItUnsigned;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \equal~output_o ;
wire \notEqual~output_o ;
wire \ItSigned~output_o ;
wire \ItUnsigned~output_o ;
wire \input0[0]~input_o ;
wire \input0[1]~input_o ;
wire \input1[1]~input_o ;
wire \input1[0]~input_o ;
wire \Equal0~0_combout ;
wire \input0[2]~input_o ;
wire \input0[3]~input_o ;
wire \input1[3]~input_o ;
wire \input1[2]~input_o ;
wire \Equal0~1_combout ;
wire \input0[4]~input_o ;
wire \input0[5]~input_o ;
wire \input1[5]~input_o ;
wire \input1[4]~input_o ;
wire \Equal0~2_combout ;
wire \input0[6]~input_o ;
wire \input0[7]~input_o ;
wire \input1[7]~input_o ;
wire \input1[6]~input_o ;
wire \Equal0~3_combout ;
wire \Equal0~4_combout ;
wire \LessThan0~1_cout ;
wire \LessThan0~3_cout ;
wire \LessThan0~5_cout ;
wire \LessThan0~7_cout ;
wire \LessThan0~9_cout ;
wire \LessThan0~11_cout ;
wire \LessThan0~13_cout ;
wire \LessThan0~14_combout ;
wire \LessThan1~1_cout ;
wire \LessThan1~3_cout ;
wire \LessThan1~5_cout ;
wire \LessThan1~7_cout ;
wire \LessThan1~9_cout ;
wire \LessThan1~11_cout ;
wire \LessThan1~13_cout ;
wire \LessThan1~14_combout ;


cycloneive_io_obuf \equal~output (
	.i(\Equal0~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\equal~output_o ),
	.obar());
// synopsys translate_off
defparam \equal~output .bus_hold = "false";
defparam \equal~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \notEqual~output (
	.i(!\Equal0~4_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\notEqual~output_o ),
	.obar());
// synopsys translate_off
defparam \notEqual~output .bus_hold = "false";
defparam \notEqual~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ItSigned~output (
	.i(\LessThan0~14_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ItSigned~output_o ),
	.obar());
// synopsys translate_off
defparam \ItSigned~output .bus_hold = "false";
defparam \ItSigned~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \ItUnsigned~output (
	.i(\LessThan1~14_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\ItUnsigned~output_o ),
	.obar());
// synopsys translate_off
defparam \ItUnsigned~output .bus_hold = "false";
defparam \ItUnsigned~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \input0[0]~input (
	.i(input0[0]),
	.ibar(gnd),
	.o(\input0[0]~input_o ));
// synopsys translate_off
defparam \input0[0]~input .bus_hold = "false";
defparam \input0[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input0[1]~input (
	.i(input0[1]),
	.ibar(gnd),
	.o(\input0[1]~input_o ));
// synopsys translate_off
defparam \input0[1]~input .bus_hold = "false";
defparam \input0[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input1[1]~input (
	.i(input1[1]),
	.ibar(gnd),
	.o(\input1[1]~input_o ));
// synopsys translate_off
defparam \input1[1]~input .bus_hold = "false";
defparam \input1[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input1[0]~input (
	.i(input1[0]),
	.ibar(gnd),
	.o(\input1[0]~input_o ));
// synopsys translate_off
defparam \input1[0]~input .bus_hold = "false";
defparam \input1[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (\input0[0]~input_o  & (\input1[0]~input_o  & (\input0[1]~input_o  $ (!\input1[1]~input_o )))) # (!\input0[0]~input_o  & (!\input1[0]~input_o  & (\input0[1]~input_o  $ (!\input1[1]~input_o ))))

	.dataa(\input0[0]~input_o ),
	.datab(\input0[1]~input_o ),
	.datac(\input1[1]~input_o ),
	.datad(\input1[0]~input_o ),
	.cin(gnd),
	.combout(\Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = 16'h8241;
defparam \Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \input0[2]~input (
	.i(input0[2]),
	.ibar(gnd),
	.o(\input0[2]~input_o ));
// synopsys translate_off
defparam \input0[2]~input .bus_hold = "false";
defparam \input0[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input0[3]~input (
	.i(input0[3]),
	.ibar(gnd),
	.o(\input0[3]~input_o ));
// synopsys translate_off
defparam \input0[3]~input .bus_hold = "false";
defparam \input0[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input1[3]~input (
	.i(input1[3]),
	.ibar(gnd),
	.o(\input1[3]~input_o ));
// synopsys translate_off
defparam \input1[3]~input .bus_hold = "false";
defparam \input1[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input1[2]~input (
	.i(input1[2]),
	.ibar(gnd),
	.o(\input1[2]~input_o ));
// synopsys translate_off
defparam \input1[2]~input .bus_hold = "false";
defparam \input1[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \Equal0~1 (
// Equation(s):
// \Equal0~1_combout  = (\input0[2]~input_o  & (\input1[2]~input_o  & (\input0[3]~input_o  $ (!\input1[3]~input_o )))) # (!\input0[2]~input_o  & (!\input1[2]~input_o  & (\input0[3]~input_o  $ (!\input1[3]~input_o ))))

	.dataa(\input0[2]~input_o ),
	.datab(\input0[3]~input_o ),
	.datac(\input1[3]~input_o ),
	.datad(\input1[2]~input_o ),
	.cin(gnd),
	.combout(\Equal0~1_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~1 .lut_mask = 16'h8241;
defparam \Equal0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \input0[4]~input (
	.i(input0[4]),
	.ibar(gnd),
	.o(\input0[4]~input_o ));
// synopsys translate_off
defparam \input0[4]~input .bus_hold = "false";
defparam \input0[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input0[5]~input (
	.i(input0[5]),
	.ibar(gnd),
	.o(\input0[5]~input_o ));
// synopsys translate_off
defparam \input0[5]~input .bus_hold = "false";
defparam \input0[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input1[5]~input (
	.i(input1[5]),
	.ibar(gnd),
	.o(\input1[5]~input_o ));
// synopsys translate_off
defparam \input1[5]~input .bus_hold = "false";
defparam \input1[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input1[4]~input (
	.i(input1[4]),
	.ibar(gnd),
	.o(\input1[4]~input_o ));
// synopsys translate_off
defparam \input1[4]~input .bus_hold = "false";
defparam \input1[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \Equal0~2 (
// Equation(s):
// \Equal0~2_combout  = (\input0[4]~input_o  & (\input1[4]~input_o  & (\input0[5]~input_o  $ (!\input1[5]~input_o )))) # (!\input0[4]~input_o  & (!\input1[4]~input_o  & (\input0[5]~input_o  $ (!\input1[5]~input_o ))))

	.dataa(\input0[4]~input_o ),
	.datab(\input0[5]~input_o ),
	.datac(\input1[5]~input_o ),
	.datad(\input1[4]~input_o ),
	.cin(gnd),
	.combout(\Equal0~2_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~2 .lut_mask = 16'h8241;
defparam \Equal0~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \input0[6]~input (
	.i(input0[6]),
	.ibar(gnd),
	.o(\input0[6]~input_o ));
// synopsys translate_off
defparam \input0[6]~input .bus_hold = "false";
defparam \input0[6]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input0[7]~input (
	.i(input0[7]),
	.ibar(gnd),
	.o(\input0[7]~input_o ));
// synopsys translate_off
defparam \input0[7]~input .bus_hold = "false";
defparam \input0[7]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input1[7]~input (
	.i(input1[7]),
	.ibar(gnd),
	.o(\input1[7]~input_o ));
// synopsys translate_off
defparam \input1[7]~input .bus_hold = "false";
defparam \input1[7]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \input1[6]~input (
	.i(input1[6]),
	.ibar(gnd),
	.o(\input1[6]~input_o ));
// synopsys translate_off
defparam \input1[6]~input .bus_hold = "false";
defparam \input1[6]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \Equal0~3 (
// Equation(s):
// \Equal0~3_combout  = (\input0[6]~input_o  & (\input1[6]~input_o  & (\input0[7]~input_o  $ (!\input1[7]~input_o )))) # (!\input0[6]~input_o  & (!\input1[6]~input_o  & (\input0[7]~input_o  $ (!\input1[7]~input_o ))))

	.dataa(\input0[6]~input_o ),
	.datab(\input0[7]~input_o ),
	.datac(\input1[7]~input_o ),
	.datad(\input1[6]~input_o ),
	.cin(gnd),
	.combout(\Equal0~3_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~3 .lut_mask = 16'h8241;
defparam \Equal0~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \Equal0~4 (
// Equation(s):
// \Equal0~4_combout  = (\Equal0~0_combout  & (\Equal0~1_combout  & (\Equal0~2_combout  & \Equal0~3_combout )))

	.dataa(\Equal0~0_combout ),
	.datab(\Equal0~1_combout ),
	.datac(\Equal0~2_combout ),
	.datad(\Equal0~3_combout ),
	.cin(gnd),
	.combout(\Equal0~4_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~4 .lut_mask = 16'h8000;
defparam \Equal0~4 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~1 (
// Equation(s):
// \LessThan0~1_cout  = CARRY((!\input0[0]~input_o  & \input1[0]~input_o ))

	.dataa(\input0[0]~input_o ),
	.datab(\input1[0]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(),
	.cout(\LessThan0~1_cout ));
// synopsys translate_off
defparam \LessThan0~1 .lut_mask = 16'h0044;
defparam \LessThan0~1 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~3 (
// Equation(s):
// \LessThan0~3_cout  = CARRY((\input0[1]~input_o  & ((!\LessThan0~1_cout ) # (!\input1[1]~input_o ))) # (!\input0[1]~input_o  & (!\input1[1]~input_o  & !\LessThan0~1_cout )))

	.dataa(\input0[1]~input_o ),
	.datab(\input1[1]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan0~1_cout ),
	.combout(),
	.cout(\LessThan0~3_cout ));
// synopsys translate_off
defparam \LessThan0~3 .lut_mask = 16'h002B;
defparam \LessThan0~3 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~5 (
// Equation(s):
// \LessThan0~5_cout  = CARRY((\input0[2]~input_o  & (\input1[2]~input_o  & !\LessThan0~3_cout )) # (!\input0[2]~input_o  & ((\input1[2]~input_o ) # (!\LessThan0~3_cout ))))

	.dataa(\input0[2]~input_o ),
	.datab(\input1[2]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan0~3_cout ),
	.combout(),
	.cout(\LessThan0~5_cout ));
// synopsys translate_off
defparam \LessThan0~5 .lut_mask = 16'h004D;
defparam \LessThan0~5 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~7 (
// Equation(s):
// \LessThan0~7_cout  = CARRY((\input0[3]~input_o  & ((!\LessThan0~5_cout ) # (!\input1[3]~input_o ))) # (!\input0[3]~input_o  & (!\input1[3]~input_o  & !\LessThan0~5_cout )))

	.dataa(\input0[3]~input_o ),
	.datab(\input1[3]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan0~5_cout ),
	.combout(),
	.cout(\LessThan0~7_cout ));
// synopsys translate_off
defparam \LessThan0~7 .lut_mask = 16'h002B;
defparam \LessThan0~7 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~9 (
// Equation(s):
// \LessThan0~9_cout  = CARRY((\input0[4]~input_o  & (\input1[4]~input_o  & !\LessThan0~7_cout )) # (!\input0[4]~input_o  & ((\input1[4]~input_o ) # (!\LessThan0~7_cout ))))

	.dataa(\input0[4]~input_o ),
	.datab(\input1[4]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan0~7_cout ),
	.combout(),
	.cout(\LessThan0~9_cout ));
// synopsys translate_off
defparam \LessThan0~9 .lut_mask = 16'h004D;
defparam \LessThan0~9 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~11 (
// Equation(s):
// \LessThan0~11_cout  = CARRY((\input0[5]~input_o  & ((!\LessThan0~9_cout ) # (!\input1[5]~input_o ))) # (!\input0[5]~input_o  & (!\input1[5]~input_o  & !\LessThan0~9_cout )))

	.dataa(\input0[5]~input_o ),
	.datab(\input1[5]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan0~9_cout ),
	.combout(),
	.cout(\LessThan0~11_cout ));
// synopsys translate_off
defparam \LessThan0~11 .lut_mask = 16'h002B;
defparam \LessThan0~11 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~13 (
// Equation(s):
// \LessThan0~13_cout  = CARRY((\input0[6]~input_o  & (\input1[6]~input_o  & !\LessThan0~11_cout )) # (!\input0[6]~input_o  & ((\input1[6]~input_o ) # (!\LessThan0~11_cout ))))

	.dataa(\input0[6]~input_o ),
	.datab(\input1[6]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan0~11_cout ),
	.combout(),
	.cout(\LessThan0~13_cout ));
// synopsys translate_off
defparam \LessThan0~13 .lut_mask = 16'h004D;
defparam \LessThan0~13 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan0~14 (
// Equation(s):
// \LessThan0~14_combout  = (\input1[7]~input_o  & (\input0[7]~input_o  & \LessThan0~13_cout )) # (!\input1[7]~input_o  & ((\input0[7]~input_o ) # (\LessThan0~13_cout )))

	.dataa(\input1[7]~input_o ),
	.datab(\input0[7]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(\LessThan0~13_cout ),
	.combout(\LessThan0~14_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan0~14 .lut_mask = 16'hD4D4;
defparam \LessThan0~14 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan1~1 (
// Equation(s):
// \LessThan1~1_cout  = CARRY((!\input0[0]~input_o  & \input1[0]~input_o ))

	.dataa(\input0[0]~input_o ),
	.datab(\input1[0]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(gnd),
	.combout(),
	.cout(\LessThan1~1_cout ));
// synopsys translate_off
defparam \LessThan1~1 .lut_mask = 16'h0044;
defparam \LessThan1~1 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan1~3 (
// Equation(s):
// \LessThan1~3_cout  = CARRY((\input0[1]~input_o  & ((!\LessThan1~1_cout ) # (!\input1[1]~input_o ))) # (!\input0[1]~input_o  & (!\input1[1]~input_o  & !\LessThan1~1_cout )))

	.dataa(\input0[1]~input_o ),
	.datab(\input1[1]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan1~1_cout ),
	.combout(),
	.cout(\LessThan1~3_cout ));
// synopsys translate_off
defparam \LessThan1~3 .lut_mask = 16'h002B;
defparam \LessThan1~3 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan1~5 (
// Equation(s):
// \LessThan1~5_cout  = CARRY((\input0[2]~input_o  & (\input1[2]~input_o  & !\LessThan1~3_cout )) # (!\input0[2]~input_o  & ((\input1[2]~input_o ) # (!\LessThan1~3_cout ))))

	.dataa(\input0[2]~input_o ),
	.datab(\input1[2]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan1~3_cout ),
	.combout(),
	.cout(\LessThan1~5_cout ));
// synopsys translate_off
defparam \LessThan1~5 .lut_mask = 16'h004D;
defparam \LessThan1~5 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan1~7 (
// Equation(s):
// \LessThan1~7_cout  = CARRY((\input0[3]~input_o  & ((!\LessThan1~5_cout ) # (!\input1[3]~input_o ))) # (!\input0[3]~input_o  & (!\input1[3]~input_o  & !\LessThan1~5_cout )))

	.dataa(\input0[3]~input_o ),
	.datab(\input1[3]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan1~5_cout ),
	.combout(),
	.cout(\LessThan1~7_cout ));
// synopsys translate_off
defparam \LessThan1~7 .lut_mask = 16'h002B;
defparam \LessThan1~7 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan1~9 (
// Equation(s):
// \LessThan1~9_cout  = CARRY((\input0[4]~input_o  & (\input1[4]~input_o  & !\LessThan1~7_cout )) # (!\input0[4]~input_o  & ((\input1[4]~input_o ) # (!\LessThan1~7_cout ))))

	.dataa(\input0[4]~input_o ),
	.datab(\input1[4]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan1~7_cout ),
	.combout(),
	.cout(\LessThan1~9_cout ));
// synopsys translate_off
defparam \LessThan1~9 .lut_mask = 16'h004D;
defparam \LessThan1~9 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan1~11 (
// Equation(s):
// \LessThan1~11_cout  = CARRY((\input0[5]~input_o  & ((!\LessThan1~9_cout ) # (!\input1[5]~input_o ))) # (!\input0[5]~input_o  & (!\input1[5]~input_o  & !\LessThan1~9_cout )))

	.dataa(\input0[5]~input_o ),
	.datab(\input1[5]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan1~9_cout ),
	.combout(),
	.cout(\LessThan1~11_cout ));
// synopsys translate_off
defparam \LessThan1~11 .lut_mask = 16'h002B;
defparam \LessThan1~11 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan1~13 (
// Equation(s):
// \LessThan1~13_cout  = CARRY((\input0[6]~input_o  & (\input1[6]~input_o  & !\LessThan1~11_cout )) # (!\input0[6]~input_o  & ((\input1[6]~input_o ) # (!\LessThan1~11_cout ))))

	.dataa(\input0[6]~input_o ),
	.datab(\input1[6]~input_o ),
	.datac(gnd),
	.datad(vcc),
	.cin(\LessThan1~11_cout ),
	.combout(),
	.cout(\LessThan1~13_cout ));
// synopsys translate_off
defparam \LessThan1~13 .lut_mask = 16'h004D;
defparam \LessThan1~13 .sum_lutc_input = "cin";
// synopsys translate_on

cycloneive_lcell_comb \LessThan1~14 (
// Equation(s):
// \LessThan1~14_combout  = (\input0[7]~input_o  & (\input1[7]~input_o  & \LessThan1~13_cout )) # (!\input0[7]~input_o  & ((\input1[7]~input_o ) # (\LessThan1~13_cout )))

	.dataa(\input0[7]~input_o ),
	.datab(\input1[7]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(\LessThan1~13_cout ),
	.combout(\LessThan1~14_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan1~14 .lut_mask = 16'hD4D4;
defparam \LessThan1~14 .sum_lutc_input = "cin";
// synopsys translate_on

assign equal = \equal~output_o ;

assign notEqual = \notEqual~output_o ;

assign ItSigned = \ItSigned~output_o ;

assign ItUnsigned = \ItUnsigned~output_o ;

endmodule
